{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.zatta\\\\Documents\\\\Eng-Software-Front\\\\src\\\\components\\\\form\\\\inputPassword.tsx\";\nimport React from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst InputPassword = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Senha\",\n    rules: [{\n      required: true,\n      message: \"Please input your password!\"\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: \"Confirme a senha\",\n    dependencies: [\"password\"],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please confirm your password!\"\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(\"The two passwords that you entered do not match!\");\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default InputPassword;","map":{"version":3,"sources":["C:/Users/lucas.zatta/Documents/Eng-Software-Front/src/components/form/inputPassword.tsx"],"names":["React","Form","Input","InputPassword","required","message","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,uDACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,CAHT;AASE,IAAA,WAAW,MATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,eAcE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,IAAA,WAAW,MAJb;AAKE,IAAA,KAAK,EAAE,CACL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAwB;AACtBC,MAAAA,SAAS,CAACC,IAAD,EAAOC,KAAP,EAAc;AACrB,YAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AACjD,iBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,eAAOD,OAAO,CAACE,MAAR,CAAe,kDAAf,CAAP;AACD;;AANqB,KAAxB,CALK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAoBE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAdF,CADF;AAuCD,CAxCD;;AA0CA,eAAeT,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nconst InputPassword = () => {\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Senha\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your password!\",\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password size=\"large\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirme a senha\"\r\n        dependencies={[\"password\"]}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please confirm your password!\",\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue(\"password\") === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(\"The two passwords that you entered do not match!\");\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password size=\"large\" />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputPassword;\r\n"]},"metadata":{},"sourceType":"module"}