{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport epics from \"./epics\";\nimport Reducers from \"./reducer\";\nconst history = createHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst epicMiddleware = createEpicMiddleware();\nconst middlewares = [routeMiddleware, epicMiddleware];\n\nconst createRootReducer = () => combineReducers({\n  router: connectRouter(history),\n  ...Reducers\n});\n\nconst store = createStore(createRootReducer(), composeWithDevTools(applyMiddleware(...middlewares)));\nepicMiddleware.run(epics);\nexport default store;","map":{"version":3,"sources":["C:/Users/lucas.zatta/Documents/Eng-Software-Front/src/redux/store.ts"],"names":["createStore","applyMiddleware","combineReducers","composeWithDevTools","createBrowserHistory","createHistory","connectRouter","routerMiddleware","createEpicMiddleware","epics","Reducers","history","routeMiddleware","epicMiddleware","middlewares","createRootReducer","router","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAoB,IAAIC,aAAjC,QAAsD,SAAtD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,OAAO,GAAGN,aAAa,EAA7B;AACA,MAAMO,eAAe,GAAGL,gBAAgB,CAACI,OAAD,CAAxC;AACA,MAAME,cAAc,GAAGL,oBAAoB,EAA3C;AACA,MAAMM,WAAW,GAAG,CAACF,eAAD,EAAkBC,cAAlB,CAApB;;AAEA,MAAME,iBAAiB,GAAG,MACxBb,eAAe,CAAC;AACdc,EAAAA,MAAM,EAAEV,aAAa,CAACK,OAAD,CADP;AAEd,KAAGD;AAFW,CAAD,CADjB;;AAMA,MAAMO,KAAK,GAAGjB,WAAW,CACvBe,iBAAiB,EADM,EAEvBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAFI,CAAzB;AAKAD,cAAc,CAACK,GAAf,CAAmBT,KAAnB;AAEA,eAAeQ,KAAf","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createBrowserHistory as createHistory } from \"history\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport epics from \"./epics\";\r\nimport Reducers from \"./reducer\";\r\n\r\nconst history = createHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst epicMiddleware = createEpicMiddleware();\r\nconst middlewares = [routeMiddleware, epicMiddleware];\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    ...Reducers,\r\n  });\r\n\r\nconst store = createStore(\r\n  createRootReducer(),\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nepicMiddleware.run(epics);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}