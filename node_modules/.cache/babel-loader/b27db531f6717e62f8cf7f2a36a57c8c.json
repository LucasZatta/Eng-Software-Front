{"ast":null,"code":"var _jsxFileName = \"/Users/camillarocha/Documents/Eng-Software-Front/src/components/form/select.tsx\";\nimport { Form, Select as AntSelect } from \"antd\";\nimport React from \"react\";\n\nconst Select = ({\n  label,\n  name,\n  options\n}) => {\n  return /*#__PURE__*/React.createElement(Form.Item, {\n    name: name,\n    label: label,\n    rules: [{\n      required: true,\n      message: `Please, select a ${label}`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AntSelect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(AntSelect.Option, {\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, option.label))));\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/camillarocha/Documents/Eng-Software-Front/src/components/form/select.tsx"],"names":["Form","Select","AntSelect","React","label","name","options","required","message","map","option","value"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAM,IAAIC,SAAzB,QAA0C,MAA1C;AACA,OAAOC,KAAP,MAA0B,OAA1B;;AAQA,MAAMF,MAAuB,GAAG,CAAC;AAAEG,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC5D,sBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,KAAK,EAAE,CAAC;AAAEG,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAG,oBAAmBJ,KAAM;AAArD,KAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,CAACG,GAAR,CAAaC,MAAD,iBACX,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,KAAK,EAAEA,MAAM,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACN,KADV,CADD,CADH,CALF,CADF;AAeD,CAhBD;;AAkBA,eAAeH,MAAf","sourcesContent":["import { Form, Select as AntSelect } from \"antd\";\r\nimport React, { FC } from \"react\";\r\n\r\nexport interface SelectProps {\r\n  label: string;\r\n  name: string;\r\n  options: { value: string; label: string }[];\r\n}\r\n\r\nconst Select: FC<SelectProps> = ({ label, name, options }) => {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={label}\r\n      rules={[{ required: true, message: `Please, select a ${label}` }]}\r\n    >\r\n      <AntSelect>\r\n        {options.map((option) => (\r\n          <AntSelect.Option value={option.value}>\r\n            {option.label}\r\n          </AntSelect.Option>\r\n        ))}\r\n      </AntSelect>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n"]},"metadata":{},"sourceType":"module"}